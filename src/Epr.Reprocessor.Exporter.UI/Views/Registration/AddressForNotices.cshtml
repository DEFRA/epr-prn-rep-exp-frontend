﻿@using Epr.Reprocessor.Exporter.UI.Enums
@using Epr.Reprocessor.Exporter.UI.ViewModels.Registration

@model AddressForNoticesViewModel

@{
	ViewData["Title"] = Localizer["regulator_address_for_notices_title"];
	ViewData["PageDescription"] = Localizer["regulator_address_for_notices_description"];
	ViewData["UseNewLayout"] = true;

	var isBusinessAddress = Model.SelectedAddressOptions == AddressOptions.BusinessAddress;
	var address = Model.BusinessAddress;
}


<form asp-asp-controller="Registration" asp-action="AddressForNotices" id="noticesAddressForm" method="post">
	@Html.AntiForgeryToken()
	@Html.HiddenFor(x => x.BusinessAddress.AddressLine1)
	@Html.HiddenFor(x => x.BusinessAddress.AddressLine2)
	@Html.HiddenFor(x => x.BusinessAddress.TownOrCity)
	@Html.HiddenFor(x => x.BusinessAddress.County)
	@Html.HiddenFor(x => x.BusinessAddress.Postcode)

	@Html.HiddenFor(x => x.SiteAddress.AddressLine1)
	@Html.HiddenFor(x => x.SiteAddress.AddressLine2)
	@Html.HiddenFor(x => x.SiteAddress.TownOrCity)
	@Html.HiddenFor(x => x.SiteAddress.County)
	@Html.HiddenFor(x => x.SiteAddress.Postcode)

	<form-group asp-for="SelectedAddressOptions">
		<fieldset class="govuk-fieldset">
			<legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
				<h1 class="govuk-fieldset__heading">
					@Localizer["regulator_address_for_notices_title"]
				</h1>
			</legend>

			@if (!ViewData.ModelState.IsValid)
			{
				@await Html.PartialAsync("Partials/Govuk/_Error", ViewData.ModelState.GetModelStateEntry("SelectedOption"))
			}

			<radios-container>
				<radio-item>
					<input asp-for="SelectedAddressOptions"
						   class="govuk-radios__input"
						   id="SelectedAddressOptions"
						   name="SelectedAddressOptions"
						   type="radio"
						   value="@Model.SelectedAddressOptions"
						   aria-controls="conditional-address-bus-reg" />

					<label class="govuk-label govuk-radios__label" for="SelectedOption">
						@(isBusinessAddress ? Localizer["BusinessAddress"] : Localizer["RegisteredAddress"])
					</label>
				</radio-item>
				<div class="govuk-radios__conditional" id="conditional-address-bus-reg">
					<p class="govuk-body-m">
						@if (!string.IsNullOrEmpty(address?.AddressLine1))
						{
							@address.AddressLine1
							<br>
						}
						@if (!string.IsNullOrEmpty(address?.AddressLine2))
						{
							@address.AddressLine2
							<br>
						}
						@if (!string.IsNullOrEmpty(address?.TownOrCity))
						{
							@address.TownOrCity
							@if (!string.IsNullOrEmpty(address.County))
							{
								<text>, @address.County</text>
							}
							<br>
						}
						else if (!string.IsNullOrEmpty(address?.County))
						{
							@address.County
							<br>
						}
						@if (!string.IsNullOrEmpty(address?.Postcode))
						{
							@address.Postcode
						}
					</p>
				</div>
				@if (Model.ShowSiteAddress)
				{
					<radio-item>
						<input asp-for="SelectedAddressOptions"
							   class="govuk-radios__input"
							   id="SelectedAddressOptions"
							   name="SelectedAddressOptions"
							   type="radio"
							   value="@AddressOptions.SiteAddress"
							   aria-controls="conditional-address-site" />

						<label class="govuk-label govuk-radios__label" for="SelectedAddressOptions">
							@Localizer["SiteAddress"]
						</label>
					</radio-item>
				}
				<radio-item>
					<input asp-for="SelectedAddressOptions"
						   class="govuk-radios__input"
						   id="SelectedAddressOptions"
						   name="SelectedAddressOptions"
						   type="radio"
						   value="@AddressOptions.DifferentAddress"
						   aria-controls="conditional-address-different" />

					<label class="govuk-label govuk-radios__label" for="SelectedAddressOptions">
						@Localizer["DifferentAddress"]
					</label>
				</radio-item>
			</radios-container>
		</fieldset>
	</form-group>
	<button type="submit" class="govuk-button" data-module="govuk-button">
		@SharedLocalizer["Continue"]
	</button>
</form>
