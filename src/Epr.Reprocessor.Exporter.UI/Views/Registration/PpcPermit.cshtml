@using Epr.Reprocessor.Exporter.UI.ViewModels.Registration
@using Epr.Reprocessor.Exporter.UI.Enums;

@model PpcPermitViewModel
@{
	// set title for page
	ViewData["Title"] = Localizer["ppc_permit_page_title"];
	ViewData["PageDescription"] = Localizer["ppc_permit_page_description"];

	var errorsViewModel = new ErrorsViewModel(ViewData.ModelState.ToErrorDictionary(), Localizer);
}

<gov-container>
	<main-wrapper>
		<grid-row>
			<grid-column width="TwoThirds">
				@if (!ViewData.ModelState.IsValid)
				{
					@await Html.PartialAsync("Partials/Govuk/_ErrorsViewModelSummary", errorsViewModel)
				}

				<h1 class="govuk-heading-l">@Localizer["ppc_permit_page_title"]</h1>

				<form asp-controller="Registration" asp-action="PpcPermit" method="post">

					<form-group asp-for="MaximumWeight">
						<fieldset class="govuk-fieldset">
							<legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
								<h1 class="govuk-fieldset__heading">The maximum weight of steel the permit authorises the site to accept and recycle</h1>
							</legend>

							<div class="govuk-form-group @(!ViewData.ModelState.IsValid ? "govuk-form-group--error" : "")">
								@if (!ViewData.ModelState.IsValid)
								{
									@await Html.PartialAsync("Partials/Govuk/_Error", ViewData.ModelState.GetModelStateEntry("MaximumWeight"))
								}

								<div class="govuk-input__wrapper">
									@Html.TextBoxFor(x => x.MaximumWeight, new
										{
											@class = $"govuk-input govuk-input--width-10 {@Html.Raw(errorsViewModel.HasErrorKey(nameof(PpcPermitViewModel.MaximumWeight)) ? "govuk-input--error" : "")}"
										})
									<div class="govuk-input__suffix" aria-hidden="true">tonnes</div>
								</div>
							</div>
						</fieldset>
					</form-group>

					<form-group asp-for="FrequencyOptions">
						<label class="govuk-label govuk-label--m">Is this per year, per month or per week?</label>

						@if (!ViewData.ModelState.IsValid)
						{
							@await Html.PartialAsync("Partials/Govuk/_Error", ViewData.ModelState.GetModelStateEntry("FrequencyOptions"))
						}

						<div class="govuk-radios" data-module="govuk-radios">
							<div class="govuk-radios__item">
								<input asp-for="FrequencyOptions" class="govuk-radios__input" type="radio" id="PpcPermitFrequencyPerYear" data-testid="PpcPermitFrequencyPerYear" value="@PpcPermitFrequencyOptions.PerYear">
								<label class="govuk-label govuk-radios__label" for="PpcPermitFrequencyPerYear">
									@Localizer["ppc_permit_per_year"]
								</label>
							</div>
							<div class="govuk-radios__item">
								<input asp-for="FrequencyOptions" class="govuk-radios__input" type="radio" id="PpcPermitFrequencyPerMonth" data-testid="PpcPermitFrequencyPerMonth" value="@PpcPermitFrequencyOptions.PerMonth">
								<label class="govuk-label govuk-radios__label" for="PpcPermitFrequencyPerMonth">
									@Localizer["ppc_permit_per_month"]
								</label>
							</div>
							<div class="govuk-radios__item">
								<input asp-for="FrequencyOptions" class="govuk-radios__input" type="radio" id="PpcPermitFrequencyPerWeek" data-testid="PpcPermitFrequencyPerWeek" value="@PpcPermitFrequencyOptions.PerWeek">
								<label class="govuk-label govuk-radios__label" for="PpcPermitFrequencyPerWeek">
									@Localizer["ppc_permit_per_week"]
								</label>
							</div>
						</div>
					</form-group>

					<button-group>
						<button class="govuk-button" data-module="govuk-button" asp-route-buttonAction="SaveAndContinue">@SharedLocalizer["saveandcontinue"]
						</button>
						<button class="govuk-button govuk-button--secondary" data-module="govuk-button" asp-route-buttonAction="SaveAndComeBackLater">@SharedLocalizer["saveandcomebacklater"]
						</button>
					</button-group>
				</form>
			</grid-column>
		</grid-row>
	</main-wrapper>
</gov-container>

@* back link *@

@* title of page *@

@* input field *@

@* radio buttons
per year
per monthly
per week
 *@

 @* save and continue - save and come back later *@