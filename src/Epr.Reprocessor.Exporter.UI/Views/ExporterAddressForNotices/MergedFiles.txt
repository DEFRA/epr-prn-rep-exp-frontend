
--- START OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\AddressForNotices.cshtml ---

?@using Epr.Reprocessor.Exporter.UI.Enums
@using Epr.Reprocessor.Exporter.UI.ViewModels.Registration

@model AddressForNoticesViewModel

@{
	ViewData["Title"] = Localizer["regulator_address_for_notices_title"];
	ViewData["PageDescription"] = Localizer["regulator_address_for_notices_description"];
	ViewData["UseNewLayout"] = true;

	var address = Model.BusinessAddress;
}

<form asp-asp-controller="Registration" asp-action="AddressForNotices" id="noticesAddressForm" method="post">
	@Html.AntiForgeryToken()
	@Html.HiddenFor(x => x.BusinessAddress.AddressLine1)
	@Html.HiddenFor(x => x.BusinessAddress.AddressLine2)
	@Html.HiddenFor(x => x.BusinessAddress.TownOrCity)
	@Html.HiddenFor(x => x.BusinessAddress.County)
	@Html.HiddenFor(x => x.BusinessAddress.Postcode)

	@Html.HiddenFor(x => x.SiteAddress.AddressLine1)
	@Html.HiddenFor(x => x.SiteAddress.AddressLine2)
	@Html.HiddenFor(x => x.SiteAddress.TownOrCity)
	@Html.HiddenFor(x => x.SiteAddress.County)
	@Html.HiddenFor(x => x.SiteAddress.Postcode)

	<form-group asp-for="SelectedAddressOptions">
		<fieldset class="govuk-fieldset">
			<legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
				<h1 class="govuk-fieldset__heading">
					@Localizer["regulator_address_for_notices_title"]
				</h1>
				<br>
				<h2 class="govuk-body-s">@Localizer["regulator_address_for_notices_description"]</h2>
			</legend>

			@if (!ViewData.ModelState.IsValid)
			{
				@await Html.PartialAsync("Partials/Govuk/_Error", ViewData.ModelState.GetModelStateEntry("SelectedOption"))
			}

			<radios-container>
				<radio-item>
					<input asp-for="SelectedAddressOptions"
						   class="govuk-radios__input"
						   id="SelectedAddressOptions"
						   name="SelectedAddressOptions"
						   type="radio"
						   value="@AddressOptions.BusinessAddress"
						   aria-controls="conditional-address-bus-reg" />
					<label class="govuk-label govuk-radios__label" for="SelectedAddressOptions">
						@(Model.IsBusinessAddress ? Localizer["BusinessAddress"] : Localizer["RegisteredAddress"])
					</label>
				</radio-item>
				<div class="govuk-radios__conditional" id="conditional-address-bus-reg">
					<p class="govuk-body-m">
						@if (!string.IsNullOrEmpty(address?.AddressLine1))
						{
							@address.AddressLine1
							<br>
						}
						@if (!string.IsNullOrEmpty(address?.AddressLine2))
						{
							@address.AddressLine2
							<br>
						}
						@if (!string.IsNullOrEmpty(address?.TownOrCity))
						{
							@address.TownOrCity
							@if (!string.IsNullOrEmpty(address.County))
							{
								<text>, @address.County</text>
							}
							<br>
						}
						else if (!string.IsNullOrEmpty(address?.County))
						{
							@address.County
							<br>
						}
						@if (!string.IsNullOrEmpty(address?.Postcode))
						{
							@address.Postcode
						}
					</p>
				</div>
				@if (Model.ShowSiteAddress)
				{
					<radio-item>
						<input asp-for="SelectedAddressOptions"
							   class="govuk-radios__input"
							   id="SelectedAddressOptions2"
							   name="SelectedAddressOptions"
							   type="radio"
							   value="@AddressOptions.SiteAddress" />
						<label class="govuk-label govuk-radios__label" for="SelectedAddressOptions2">
							@Localizer["SiteAddress"]
						</label>
					</radio-item>
				}
				<radio-item>
					<input asp-for="SelectedAddressOptions"
						   class="govuk-radios__input"
						   id="SelectedAddressOptions3"
						   name="SelectedAddressOptions"
						   type="radio"
						   value="@AddressOptions.DifferentAddress" />

					<label class="govuk-label govuk-radios__label" for="SelectedAddressOptions3">
						@Localizer["DifferentAddress"]
					</label>
				</radio-item>
			</radios-container>
		</fieldset>
	</form-group>
	<button type="submit" class="govuk-button" data-module="govuk-button">
		@SharedLocalizer["Continue"]
	</button>
</form>

--- END OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\AddressForNotices.cshtml ---


--- START OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\AddressOfReprocessingSite.cshtml ---

@model AddressOfReprocessingSiteViewModel
@using Epr.Reprocessor.Exporter.UI.Enums;
@using Epr.Reprocessor.Exporter.UI.ViewModels.Registration;
@{
	ViewData["Title"] = Localizer["page_title"];
	ViewData["PageDescription"] = Localizer["page_description"];
	ViewData["UseNewLayout"] = true;

	var isBusinessAddress = Model.BusinessAddress is not null;
	var address = isBusinessAddress ? Model.BusinessAddress : Model.RegisteredAddress;
}
<form asp-controller="Registration" asp-action="AddressOfReprocessingSite" id="siteaddressform" method="post">
	@Html.AntiForgeryToken()
	@Html.HiddenFor(x => x.BusinessAddress.AddressLine1)
	@Html.HiddenFor(x => x.BusinessAddress.AddressLine2)
	@Html.HiddenFor(x => x.BusinessAddress.TownOrCity)
	@Html.HiddenFor(x => x.BusinessAddress.County)
	@Html.HiddenFor(x => x.BusinessAddress.Postcode)
	@Html.HiddenFor(x => x.RegisteredAddress.AddressLine1)
	@Html.HiddenFor(x => x.RegisteredAddress.AddressLine2)
	@Html.HiddenFor(x => x.RegisteredAddress.TownOrCity)
	@Html.HiddenFor(x => x.RegisteredAddress.County)
	@Html.HiddenFor(x => x.RegisteredAddress.Postcode)

	<form-group asp-for="SelectedOption">
		<fieldset class="govuk-fieldset">
			<legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
				<h1 class="govuk-fieldset__heading">
					@Localizer["page_title"]
				</h1>
			</legend>
			
			@if (!ViewData.ModelState.IsValid)
			{
				@await Html.PartialAsync("Partials/Govuk/_Error", ViewData.ModelState.GetModelStateEntry("SelectedOption"))
			}

			<radios-container>
				<radio-item>
					@if (isBusinessAddress)
					{
						<input asp-for="SelectedOption" 
						       class="govuk-radios__input"
							   id="SelectedOption"
							   name="SelectedOption"
							   type="radio"
							   value="@AddressOptions.BusinessAddress"
							   aria-controls="conditional-address" />

						<label class="govuk-label govuk-radios__label" for="SelectedOption">
							@Localizer["SameAsBusinessAddress"]
						</label>
					}
					else
					{
						<input asp-for="SelectedOption" 
						       class="govuk-radios__input"
							   id="SelectedOption2"
							   name="SelectedOption"
							   type="radio"
							   value="@AddressOptions.RegisteredAddress"
							   aria-controls="conditional-address" />

						<label class="govuk-label govuk-radios__label" for="SelectedOption2">
							@Localizer["SameAsRegisteredAddress"]
						</label>
					}
				</radio-item>

				<div class="govuk-radios__conditional" id="conditional-address">
					<p class="govuk-body-m">
						@if (isBusinessAddress)
						{
							<strong>@Localizer["BusinessAddressCaption"]</strong>
							<br>
						}
						else
						{
							<strong>@Localizer["RegisteredAddressCaption"]</strong>
							<br>
						}
						@if (!string.IsNullOrEmpty(address?.AddressLine1))
						{
							@address.AddressLine1
							<br>
						}
						@if (!string.IsNullOrEmpty(address?.AddressLine2))
						{
							@address.AddressLine2
							<br>
						}
						@if (!string.IsNullOrEmpty(address?.TownOrCity))
						{
							@address.TownOrCity
							@if (!string.IsNullOrEmpty(address.County))
							{
								<text>, @address.County</text>
							}

							<br>
						}
						else if (!string.IsNullOrEmpty(address?.County))
						{
							@address.County
							<br>
						}
						@if (!string.IsNullOrEmpty(address?.Postcode))
						{
							@address.Postcode
						}
					</p>
				</div>

				<radio-item>
					<input asp-for="SelectedOption" 
					       class="govuk-radios__input"
						   id="SelectedOption3"
						   name="SelectedOption"
						   type="radio"
						   value="@AddressOptions.DifferentAddress">

					<label class="govuk-label govuk-radios__label" for="SelectedOption3">
						@Localizer["DifferentAddress"]
					</label>
				</radio-item>
			</radios-container>
		</fieldset>
	</form-group>

	<button type="submit" class="govuk-button" data-module="govuk-button">
		@SharedLocalizer["Continue"]
	</button>
</form>

--- END OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\AddressOfReprocessingSite.cshtml ---


--- START OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\CheckAnswers.cshtml ---

@model CheckAnswersViewModel
@using Epr.Reprocessor.Exporter.UI.ViewModels.Registration;
@using Epr.Reprocessor.Exporter.UI.App.Constants;
@using Epr.Reprocessor.Exporter.UI.App.Extensions
@{
	ViewData["Title"] = Localizer["CheckAnswersPageTitle"];
	ViewData["UseNewLayout"] = true;
}


<form asp-asp-controller="Registration" asp-action="CheckAnswers" method="post" id="answer-summary-form">

	@Html.AntiForgeryToken()

	<h1 class="govuk-heading-l">@Localizer["CheckAnswersPageTitle"]</h1>

	<dl class="govuk-summary-list govuk-!-margin-bottom-9">

		<div class="govuk-summary-list__row">
			<dt class="govuk-summary-list__key">
				@Localizer["LocationOfTheReprocessingSite"]
			</dt>
			<dd class="govuk-summary-list__value">
				@Model.SiteLocation?.GetDisplayName()
			</dd>
			<dd class="govuk-summary-list__actions">
				<a class="govuk-link" href="@PagePaths.CountryOfReprocessingSite">
					@SharedLocalizer["change"]<span class="govuk-visually-hidden"> @Localizer["LocationOfTheReprocessingSite"]</span>
				</a>
			</dd>
		</div>

		<div class="govuk-summary-list__row">
			<dt class="govuk-summary-list__key">
				@Localizer["ReprocessingSiteAddress"]
			</dt>
			<dd class="govuk-summary-list__value">
				@Html.DisplayMultilineAddress(Model.ReprocessingSiteAddress)
			</dd>
			<dd class="govuk-summary-list__actions">
				<a class="govuk-link" href="@PagePaths.AddressOfReprocessingSite">
					@SharedLocalizer["change"]<span class="govuk-visually-hidden"> @Localizer["ReprocessingSiteAddress"]</span>
				</a>
			</dd>
		</div>

		<div class="govuk-summary-list__row">
			<dt class="govuk-summary-list__key">
				@Localizer["ReprocessingSiteGridReference"]
			</dt>
			<dd class="govuk-summary-list__value">
				@Model.SiteGridReference
			</dd>
			<dd class="govuk-summary-list__actions">
				<a class="govuk-link" href="@PagePaths.GridReferenceOfReprocessingSite">
					@SharedLocalizer["change"]<span class="govuk-visually-hidden"> @Localizer["ReprocessingSiteGridReference"]</span>
				</a>
			</dd>
		</div>

		<div class="govuk-summary-list__row">
			<dt class="govuk-summary-list__key">
				@Localizer["AddressForServiceOfNotices"]
			</dt>
			<dd class="govuk-summary-list__value">
				@Html.DisplayMultilineAddress(Model.ServiceOfNoticesAddress)
			</dd>
			<dd class="govuk-summary-list__actions">
				<a class="govuk-link" href="@PagePaths.AddressForNotices">
					@SharedLocalizer["change"]<span class="govuk-visually-hidden"> @Localizer["AddressForServiceOfNotices"]</span>
				</a>
			</dd>
		</div>
	</dl>

	<div class="govuk-button-group">
		<button class="govuk-button" data-module="govuk-button" asp-route-buttonAction="SaveAndContinue">
			@SharedLocalizer["confirmandcontinue"]
		</button>
		<button class="govuk-button govuk-button--secondary" data-module="govuk-button" asp-route-buttonAction="SaveAndComeBackLater">
			@SharedLocalizer["saveandcontinuelater"]
		</button>
	</div>
</form>

--- END OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\CheckAnswers.cshtml ---


--- START OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\ConfirmNoticesAddress.cshtml ---

@using Epr.Reprocessor.Exporter.UI.App.Constants
@using Epr.Reprocessor.Exporter.UI.ViewModels.Registration
@model ConfirmNoticesAddressViewModel
@{
	ViewData["Title"] = Localizer["page_title"];
	ViewData["PageDescription"] = Localizer["page_description"];
	ViewData["UseNewLayout"] = true;
}

<h1 class="govuk-heading-l govuk-\!-margin-bottom-4">
	<span class="govuk-caption-l">
		@Localizer["caption"]
	</span>
	<br />
	<span>
		@Html.DisplayFor(x => x.ConfirmAddress)
	</span>
</h1>

<form asp-controller="Registration" asp-action="ConfirmNoticesAddress" method="post">
	<div class="govuk-button-group">
		<button class="govuk-button" data-module="govuk-button">
			@Localizer["call_to_action_use_this_address"]
		</button>
	</div>
</form>

<p class="govuk-body govuk-!-margin-top-4">
	<a href="@PagePaths.SelectAddressForServiceOfNotices" role="button" draggable="false" class="govuk-link" data-module="govuk-button">
		@Localizer["use_a_different_address"]
	</a>
</p>
<p class="govuk-body govuk-!-margin-top-4">
	<a href="@PagePaths.ManualAddressForServiceOfNotices" role="button" draggable="false" class="govuk-link" data-module="govuk-button">
		@Localizer["enter_address_manually"]
	</a>
</p>

--- END OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\ConfirmNoticesAddress.cshtml ---


--- START OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\ManualAddressForServiceOfNotices.cshtml ---

@model ManualAddressForServiceOfNoticesViewModel
@using Epr.Reprocessor.Exporter.UI.ViewModels.Registration;
@{
	ViewData["Title"] = Localizer["page_title"];
	ViewData["PageDescription"] = Localizer["page_description"];
	ViewData["UseNewLayout"] = true;
}

<form asp-controller="Registration" asp-action="ManualAddressForServiceOfNotices" method="post" id="manual-address-form">

	<fieldset class="govuk-fieldset">
		<legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
			<h1 class="govuk-heading-l">
				@Localizer["page_title"]
			</h1>
		</legend>

		@await Html.PartialAsync("Partials/Address")

	</fieldset>

	<button-group>
		<button class="govuk-button" data-module="govuk-button" asp-route-buttonAction="SaveAndContinue">
			@SharedLocalizer["saveandcontinue"]
		</button>
		<button class="govuk-button govuk-button--secondary" data-module="govuk-button" asp-route-buttonAction="SaveAndComeBackLater">
			@SharedLocalizer["saveandcomebacklater"]
		</button>
	</button-group>
</form>

--- END OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\ManualAddressForServiceOfNotices.cshtml ---


--- START OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\NoAddressFound.cshtml ---

@using Epr.Reprocessor.Exporter.UI.App.Constants
@model Epr.Reprocessor.Exporter.UI.ViewModels.NoAddressFoundViewModel
@{
    ViewData["Title"] = Localizer["page_title"];
    ViewData["PageDescription"] = Localizer["page_description"];
    var searchAgainPath = Model.LookupType == AddressLookupType.LegalDocuments ? PagePaths.PostcodeForServiceOfNotices : PagePaths.PostcodeOfReprocessingSite;
    var manualAddressPath = Model.LookupType == AddressLookupType.LegalDocuments ? PagePaths.ManualAddressForServiceOfNotices : PagePaths.EnterReprocessingSiteAddress;
}

<main class="govuk-main-wrapper govuk-!-padding-top-4" id="error-content" role="main">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds govuk-!-margin-top-8">
            <h1 class="govuk-heading-l">@Localizer["header_text"]</h1>         
            <p class="govuk-body">@Localizer["no_address_found", Model.Postcode]</p>
            <p class="govuk-body govuk-!-margin-top-4"> 
                <a href="@searchAgainPath" class="govuk-link govuk-link--no-visited-state" data-module="govuk-button">
                    @Localizer["search_again"]
                </a>
            </p>
            <p class="govuk-body govuk-!-margin-top-4">
                <a href="@manualAddressPath" class="govuk-link govuk-link--no-visited-state" data-module="govuk-button">
                    @Localizer["enter_address_manually"]
                </a> 
            </p>
        </div>
    </div>
</main>

--- END OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\NoAddressFound.cshtml ---


--- START OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\Placeholder.cshtml ---

@{
	ViewData["Title"] = "placeholder";
}

<div class="govuk-width-container">
	<main class="govuk-main-wrapper govuk-!-padding-top-4" id="main-content" role="main">
		<h1>placeholder till next page is developed</h1>
	</main>
</div>

--- END OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\Placeholder.cshtml ---


--- START OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\PostcodeForServiceOfNotices.cshtml ---

@model PostcodeForServiceOfNoticesViewModel
@using Epr.Reprocessor.Exporter.UI.App.Constants

@{
	ViewData["Title"] = Localizer["PostcodeForServiceOfNoticesPageTitle"];
	var errorsVM = new ErrorsViewModel(ViewData.ModelState.ToErrorDictionary(), Localizer);
	ViewData["UseNewLayout"] = true;
}

<form asp-controller="Registration" asp-action="PostcodeForServiceOfNotices" id="manual-address-form" method="post">

	@Html.AntiForgeryToken()	

	<div class="govuk-form-group@(errorsVM.Errors.Count > 0 ? " govuk-form-group--error" : string.Empty)">
		<h1 class="govuk-heading-l">
			@Localizer["PostcodeForServiceOfNoticesPageTitle"]
		</h1>

		<div class="govuk-form-group@(errorsVM.HasErrorKey("Postcode") ? " govuk-form-group--error" : string.Empty)">
			<label class="govuk-label" for="Postcode">
				@Localizer["EnterAPostcode"]
			</label>
			@Html.ValidationMessageFor(x => x.Postcode, string.Empty, new { @class = "govuk-error-message" })
			<div class="govuk-input__wrapper">
				@Html.TextBoxFor(m => m.Postcode,
									new
									{
										@class = string.Format("govuk-input govuk-input--width-10{0}", errorsVM.HasErrorKey("Postcode") ? " govuk-input--error" : string.Empty),
										spellcheck = "false",
										autocomplete = "postal-code"
									})
			</div>
		</div>
	</div>

	<p class="govuk-body govuk-!-margin-top-4">
		<button class="govuk-button" data-module="govuk-button" type="submit" data-testid="submission-declaration-button">
			@Localizer["FindAddress"]
		</button>
	</p>

	<p class="govuk-body govuk-!-margin-top-4">
		<a href="@PagePaths.ExporterManualAddressForNotices" role="button" draggable="false" class="govuk-link" data-module="govuk-button">
			@Localizer["EnterAddressManually"]
		</a>
	</p>

</form>

--- END OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\PostcodeForServiceOfNotices.cshtml ---


--- START OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\PostcodeOfReprocessingSite.cshtml ---

@using Epr.Reprocessor.Exporter.UI.App.Constants
@model Epr.Reprocessor.Exporter.UI.ViewModels.PostcodeOfReprocessingSiteViewModel
@{
    ViewData["Title"] = Localizer["PostcodeOfReprocessingSitePageTitle"];
    var errorsVM = new ErrorsViewModel(ViewData.ModelState.ToErrorDictionary(), Localizer);
	ViewData["UseNewLayout"] = true;
}

<form asp-controller="Registration" asp-action="PostcodeOfReprocessingSite" id="manual-address-form" method="post">

	@Html.AntiForgeryToken()
	
	<div class="govuk-form-group@(errorsVM.Errors.Count > 0 ? " govuk-form-group--error" : string.Empty)">
		<h1 class="govuk-heading-l">
			@Localizer["PostcodeOfReprocessingSitePageTitle"]
		</h1>

		<div class="govuk-form-group@(errorsVM.HasErrorKey("Postcode") ? " govuk-form-group--error" : string.Empty)">
			<label class="govuk-label" for="Postcode">
				@Localizer["EnterAPostcode"]
			</label>
			@Html.ValidationMessageFor(x => x.Postcode, string.Empty, new { @class = "govuk-error-message" })
			<div class="govuk-input__wrapper">
				@Html.TextBoxFor(m => m.Postcode,
									new
									{
										@class = string.Format("govuk-input govuk-input--width-10{0}", errorsVM.HasErrorKey("Postcode") ? " govuk-input--error" : string.Empty),
										spellcheck = "false",
										autocomplete = "postal-code"
									})
			</div>
		</div>
	</div>

	<p class="govuk-body govuk-!-margin-top-4">
		<button class="govuk-button" data-module="govuk-button" type="submit" data-testid="submission-declaration-button">
			@Localizer["FindAddress"]
		</button>
	</p>

	<p class="govuk-body govuk-!-margin-top-4">
		<a href="@PagePaths.ExporterManualAddressForNotices" role="button" draggable="false" class="govuk-link" data-module="govuk-button">
			@Localizer["EnterAddressManually"]
		</a>
	</p>	
</form>

--- END OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\PostcodeOfReprocessingSite.cshtml ---


--- START OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\SelectAddressForServiceOfNotices.cshtml ---

@using Epr.Reprocessor.Exporter.UI.App.Constants
@model SelectAddressForServiceOfNoticesViewModel
@using Epr.Reprocessor.Exporter.UI.ViewModels.Registration;
@{
	ViewData["Title"] = Localizer["SelectAddressForServiceOfNoticesPageTitle"];
	var errorsVM = new ErrorsViewModel(ViewData.ModelState.ToErrorDictionary(), Localizer);
	ViewData["UseNewLayout"] = true;
}


<h1 class="govuk-heading-l">
	@Localizer["SelectAddressForServiceOfNoticesPageTitle"]
</h1>
<p class="govuk-body">
	@Model.Addresses.Count @Localizer["AddressesFoundFor"] @Model.Postcode
	<a href="@PagePaths.PostcodeForServiceOfNotices" class="govuk-link">
		@Localizer["SearchAgain"]
	</a>
</p>

<table class="govuk-table">
	<caption class="govuk-visually-hidden">Search result for @Model.Postcode</caption>
	<thead class="govuk-table__head">
		<tr class="govuk-table__row">
			<th scope="col" class="govuk-table__header">@Localizer["Address"]</th>
		</tr>
	</thead>
	<tbody class="govuk-table__body">

		@for (int i = 0; i < Model.Addresses.Count; i++)
		{
			<tr class="govuk-table__row">
				<td class="govuk-table__cell">
					<a asp-action="SelectAddressForServiceOfNotices"
					   asp-route-SelectedIndex="@i">
						@Model.Addresses[i].FormattedAddress
					</a>
				</td>
			</tr>
		}
	</tbody>
</table>

<p class="govuk-body">
	<a href="@PagePaths.ManualAddressForServiceOfNotices" class="govuk-link">
		@Localizer["EnterAddressManually"]
	</a>
</p>		

--- END OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\SelectAddressForServiceOfNotices.cshtml ---


--- START OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\_ViewStart.cshtml ---

@{
	if (string.IsNullOrEmpty(ViewData["UseNewLayout"]?.ToString()))
	{
		ViewData["UseNewLayout"] = true;
	}
}

--- END OF FILE: C:\dev\epr-prn-rep-exp-frontend\src\Epr.Reprocessor.Exporter.UI\Views\ExporterAddressForNotices\_ViewStart.cshtml ---

